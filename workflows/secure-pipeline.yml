name: Secure CI/CD Pipeline

on:
  push:
    branches:
      - main
      - "feature/**"
      - candidate-assessment
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: my-backend:latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      #  Backend Build
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Spring Boot app
        run: mvn clean package -DskipTests

      # Frontend Build
      - name: Build Frontend
        working-directory: frontend
        run: |
          npm ci --prefer-offline
          npm run build

      # Build Docker image (multi-stage, non-root Dockerfile assumed)
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build --no-cache -t $DOCKER_IMAGE -f application/Dockerfile .

      # Trivy Image Scan
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: $DOCKER_IMAGE
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      # Upload Trivy SARIF to GitHub Security tab
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      # Gitleaks (secret scanning)
      - name: Scan repository for secrets with Gitleaks
        uses: zricethezav/gitleaks-action@v2
        with:
          config-path: gitleaks.toml
          exit-code: 1

      # Kube-linter (if k8s manifests exist)
      - name: Install kube-linter
        run: |
          curl -sSfL https://raw.githubusercontent.com/stackrox/kube-linter/main/install.sh | sh
          sudo mv kube-linter /usr/local/bin/kube-linter

      - name: Lint Kubernetes manifests
        if: hashFiles('infrastructure/k8s/**.yml') != ''
        run: kube-linter lint infrastructure/k8s/
